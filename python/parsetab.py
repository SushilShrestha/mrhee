
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\n\xb7:\x19|\xa9\xeaV\xdc\xc1\x9au\xa6\x01\x94\x97'
    
_lr_action_items = {'DIYE':([1,2,3,5,7,8,11,12,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,44,48,51,60,72,76,78,79,80,81,83,87,88,89,90,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,113,115,116,117,123,127,134,135,137,139,140,141,145,147,151,153,156,157,159,161,162,],[-11,-62,-61,-59,-68,-12,-27,-63,-9,-10,-67,-72,-4,-30,-28,-58,-13,-5,-66,-8,-29,-3,-57,-26,-31,-60,-64,-14,-65,-6,-69,-7,-72,-74,-85,-84,-23,-83,-18,-17,-70,-71,-56,-2,-22,-19,-15,-21,-20,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,-16,-85,-25,-14,-73,137,-42,-40,-32,147,-24,-39,-85,-33,-36,-41,-85,-37,-35,-34,-38,]),'WA':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,59,-65,-69,-72,59,59,-74,-84,-83,-70,-71,-56,59,59,59,59,59,59,59,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,59,59,59,-73,59,59,59,59,]),'YEDI':([0,51,82,96,110,115,118,128,136,142,145,149,156,158,],[4,4,114,4,4,4,4,114,114,4,4,4,4,4,]),'ASSIGNMENT':([19,50,],[54,86,]),'LPARA':([0,4,6,10,19,44,47,49,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[6,6,6,6,55,55,6,85,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BAISA':([1,2,3,5,7,8,11,12,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,44,48,51,60,72,76,78,79,80,81,83,87,88,89,90,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,113,116,117,123,134,135,137,140,141,147,149,153,154,157,158,160,162,],[-11,-62,-61,-59,-68,-12,-27,-63,-9,-10,-67,-72,-4,-30,-28,-58,-13,-5,-66,-8,-29,-3,-57,-26,-31,-60,-64,-14,-65,-6,-69,-7,-72,-74,-85,-84,-23,-83,-18,-17,-70,-71,-56,-2,-22,-19,-15,-21,-20,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,-16,-25,-14,-73,-42,-40,-32,-24,-39,-33,-85,-41,157,-37,-85,162,-38,]),'COLON':([2,3,5,7,12,18,24,27,32,35,36,38,41,44,48,60,76,80,81,83,97,98,99,100,101,102,103,104,105,106,107,108,109,111,123,144,],[-62,-61,-59,-68,-63,-67,-58,-66,-57,-60,-64,-65,-69,-72,-74,-84,-83,-70,-71,-56,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,-73,150,]),'LEKHA':([0,2,3,5,7,12,18,19,20,24,27,32,35,36,37,38,39,41,44,48,51,60,76,80,81,82,83,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,117,118,123,128,136,142,145,149,156,158,],[-85,-62,-61,-59,-68,-63,-67,-72,-45,-58,-66,-57,-60,-64,-44,-65,79,-69,-72,-74,-85,-84,-83,-70,-71,-85,-56,-45,-85,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-85,-79,-43,-85,-44,-85,-73,-85,-85,-85,-85,-85,-85,-85,]),'BOGUS':([120,],[132,]),'JABA':([0,51,96,110,115,118,142,145,149,156,158,],[9,9,9,9,9,9,9,9,9,9,9,]),'CHHAINA':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,60,-65,-69,-72,60,60,-74,-84,-83,-70,-71,-56,60,60,60,60,60,60,60,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,60,60,60,-73,60,60,60,60,]),'MINUS':([0,2,3,4,5,6,7,10,12,18,19,24,27,32,35,36,37,38,41,44,45,46,47,48,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,80,81,82,83,84,86,88,89,90,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,117,118,122,123,126,128,133,136,138,142,144,145,146,149,150,155,156,158,],[10,-62,-61,10,-59,10,-68,10,-63,-67,-72,-58,-66,-57,-60,-64,61,-65,-69,-72,61,61,10,-74,10,10,10,10,10,10,10,10,-84,10,10,10,10,10,10,10,10,10,10,10,10,10,-83,10,-70,-71,10,-56,61,10,61,61,61,61,61,61,10,61,-51,61,-55,-54,61,61,-50,61,61,-53,-52,61,10,61,61,10,10,61,10,61,-73,61,10,10,10,10,10,61,10,61,10,10,61,10,10,]),'TICHO':([1,2,3,5,7,8,11,12,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,44,48,51,60,72,76,78,79,80,81,83,87,88,89,90,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,116,117,123,125,134,135,137,140,141,147,153,157,162,],[-11,-62,-61,-59,-68,-12,-27,-63,-9,-10,-67,-72,-4,-30,-28,-58,-13,-5,-66,-8,-29,-3,-57,-26,-31,-60,-64,-14,-65,-6,-69,-7,-72,-74,-85,-84,-23,-83,-18,-17,-70,-71,-56,-2,-22,-19,-15,-21,-20,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-85,-79,-16,-25,-14,-73,135,-42,-40,-32,-24,-39,-33,-41,-37,-38,]),'DIVIDE':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,70,-65,-69,-72,70,70,-74,-84,-83,-70,-71,-56,70,70,70,70,70,70,70,70,70,70,-55,-54,70,70,70,70,70,-53,-52,70,70,70,70,70,-73,70,70,70,70,]),'OCTALINTEGER':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'LE':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,62,-65,-69,-72,62,62,-74,-84,-83,-70,-71,-56,62,62,62,62,62,62,62,62,-51,None,-55,-54,62,None,-50,62,None,-53,-52,None,62,62,62,62,-73,62,62,62,62,]),'DEKHI':([2,3,5,7,12,18,24,27,32,35,36,38,41,44,48,60,76,80,81,83,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,],[-62,-61,-59,-68,-63,-67,-58,-66,-57,-60,-64,-65,-69,-72,-74,-84,-83,-70,-71,-56,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,133,-73,]),'RPARA':([2,3,5,7,12,18,24,27,32,35,36,38,41,44,46,48,55,60,76,80,81,83,85,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,119,120,121,123,131,132,143,],[-62,-61,-59,-68,-63,-67,-58,-66,-57,-60,-64,-65,-69,-72,83,-74,-85,-84,-83,-70,-71,-56,-85,-45,-44,123,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,-43,130,-47,-49,-73,-85,-48,-46,]),'POWER':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,63,-65,-69,-72,63,63,-74,-84,-83,-70,-71,-56,63,63,63,63,63,63,63,63,63,63,-55,-54,63,63,63,63,63,63,63,63,63,63,63,63,-73,63,63,63,63,]),'EQ':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,75,-65,-69,-72,75,75,-74,-84,-83,-70,-71,-56,75,75,75,75,75,75,75,75,-51,-78,-55,-54,None,-76,-50,75,-75,-53,-52,-77,None,75,75,75,-73,75,75,75,75,]),'KAAM':([0,51,96,110,115,118,142,145,149,156,158,],[13,13,13,13,13,13,13,13,13,13,13,]),'KHAKA':([0,51,96,110,115,118,142,145,149,156,158,],[31,31,31,31,31,31,31,31,31,31,31,]),'NE':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,65,-65,-69,-72,65,65,-74,-84,-83,-70,-71,-56,65,65,65,65,65,65,65,65,-51,-78,-55,-54,None,-76,-50,65,-75,-53,-52,-77,None,65,65,65,-73,65,65,65,65,]),'SABAI':([0,51,96,110,115,118,142,145,149,156,158,],[14,14,14,14,14,14,14,14,14,14,14,]),'LT':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,66,-65,-69,-72,66,66,-74,-84,-83,-70,-71,-56,66,66,66,66,66,66,66,66,-51,None,-55,-54,66,None,-50,66,None,-53,-52,None,66,66,66,66,-73,66,66,66,66,]),'DECIMALINTEGER':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'COMMA':([0,2,3,5,7,12,18,19,20,24,27,32,35,36,37,38,39,41,44,48,51,55,60,76,80,81,82,83,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,117,118,120,123,128,136,142,145,149,156,158,],[-85,-62,-61,-59,-68,-63,-67,-72,-45,-58,-66,-57,-60,-64,-44,-65,77,-69,-72,-74,-85,-85,-84,-83,-70,-71,-85,-56,-45,-44,77,-85,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-85,-79,-43,-85,-44,-85,131,-73,-85,-85,-85,-85,-85,-85,-85,]),'RA':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,68,-65,-69,-72,68,68,-74,-84,-83,-70,-71,-56,68,68,68,68,68,68,68,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,68,68,68,-73,68,68,68,68,]),'PLUS':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,67,-65,-69,-72,67,67,-74,-84,-83,-70,-71,-56,67,67,67,67,67,67,67,67,-51,67,-55,-54,67,67,-50,67,67,-53,-52,67,67,67,67,67,-73,67,67,67,67,]),'IDENTIFIER':([0,4,6,10,13,14,31,43,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,85,86,96,110,114,115,118,128,131,133,136,138,142,145,149,150,156,158,],[19,44,44,44,49,50,58,44,44,19,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,19,120,44,19,19,44,19,19,19,120,44,19,44,19,19,19,44,19,19,]),'$end':([0,1,2,3,5,7,8,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,44,48,51,60,72,76,78,79,80,81,83,87,88,89,90,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,113,116,117,123,134,135,137,140,141,147,153,157,162,],[-85,-11,-62,-61,-59,-68,-12,-27,-63,-1,-9,-10,-67,-72,-4,-30,-28,0,-58,-13,-5,-66,-8,-29,-3,-57,-26,-31,-60,-64,-14,-65,-6,-69,-7,-72,-74,-85,-84,-23,-83,-18,-17,-70,-71,-56,-2,-22,-19,-15,-21,-20,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,-16,-25,-14,-73,-42,-40,-32,-24,-39,-33,-41,-37,-38,]),'BHAE':([2,3,5,7,12,18,24,27,32,35,36,38,41,44,45,48,60,76,80,81,83,97,98,99,100,101,102,103,104,105,106,107,108,109,111,123,126,146,],[-62,-61,-59,-68,-63,-67,-58,-66,-57,-60,-64,-65,-69,-72,82,-74,-84,-83,-70,-71,-56,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,-73,136,152,]),'GT':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,69,-65,-69,-72,69,69,-74,-84,-83,-70,-71,-56,69,69,69,69,69,69,69,69,-51,None,-55,-54,69,None,-50,69,None,-53,-52,None,69,69,69,69,-73,69,69,69,69,]),'STRING':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'AI':([19,],[53,]),'TIMES':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,71,-65,-69,-72,71,71,-74,-84,-83,-70,-71,-56,71,71,71,71,71,71,71,71,71,71,-55,-54,71,71,71,71,71,-53,-52,71,71,71,71,71,-73,71,71,71,71,]),'HEXAINTEGER':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'GE':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,73,-65,-69,-72,73,73,-74,-84,-83,-70,-71,-56,73,73,73,73,73,73,73,73,-51,None,-55,-54,73,None,-50,73,None,-53,-52,None,73,73,73,73,-73,73,73,73,73,]),'BAJA':([1,2,3,5,7,8,11,12,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,44,48,51,60,72,76,78,79,80,81,83,87,88,89,90,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,113,116,117,118,123,129,134,135,137,140,141,147,153,157,162,],[-11,-62,-61,-59,-68,-12,-27,-63,-9,-10,-67,-72,-4,-30,-28,-58,-13,-5,-66,-8,-29,-3,-57,-26,-31,-60,-64,-14,-65,-6,-69,-7,-72,-74,-85,-84,-23,-83,-18,-17,-70,-71,-56,-2,-22,-19,-15,-21,-20,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,-16,-25,-14,-85,-73,141,-42,-40,-32,-24,-39,-33,-41,-37,-38,]),'NEWLINE':([0,1,2,3,5,7,8,11,12,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,44,48,51,58,60,72,74,76,78,79,80,81,82,83,84,87,88,89,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,115,116,117,118,123,124,125,127,129,130,134,135,137,138,140,141,142,144,145,147,148,149,151,152,153,154,155,156,157,158,159,160,162,],[-85,-11,-62,-61,-59,-68,-12,-27,-63,51,-9,-10,-67,-72,-4,-30,-28,-58,-13,-5,-66,-8,-29,-3,-57,-26,-31,-60,-64,-14,-65,-6,-69,-7,-72,-74,-85,96,-84,-23,110,-83,-18,-17,-70,-71,115,-56,118,-2,-22,-19,-15,-21,-20,-85,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-85,-79,-16,-85,-25,-14,-85,-73,51,51,51,51,142,-42,-40,-32,145,-24,-39,-85,149,-85,-33,51,-85,51,156,-41,51,158,-85,-37,-85,51,51,-38,]),'MODULUS':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,64,-65,-69,-72,64,64,-74,-84,-83,-70,-71,-56,64,64,64,64,64,64,64,64,64,64,-55,-54,64,64,64,64,64,64,64,64,64,64,64,64,-73,64,64,64,64,]),'DOT':([3,7,19,41,44,80,81,123,],[43,-68,-72,-69,-72,-70,-71,-73,]),'KAKHA':([1,2,3,5,7,8,11,12,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,44,48,51,60,72,76,78,79,80,81,83,87,88,89,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,113,116,117,123,124,134,135,137,140,141,147,153,157,162,],[-11,-62,-61,-59,-68,-12,-27,-63,-9,-10,-67,-72,-4,-30,-28,-58,-13,-5,-66,-8,-29,-3,-57,-26,-31,-60,-64,-14,-65,-6,-69,-7,-72,-74,-85,-84,-23,-83,-18,-17,-70,-71,-56,-2,-22,-19,-15,-21,-20,-85,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,-16,-25,-14,-73,134,-42,-40,-32,-24,-39,-33,-41,-37,-38,]),'SAMMA':([9,],[47,]),'CHHA':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,45,46,48,60,76,80,81,83,84,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,123,126,144,146,155,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,76,-65,-69,-72,76,76,-74,-84,-83,-70,-71,-56,76,76,76,76,76,76,76,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,76,76,76,-73,76,76,76,76,]),'SEMICOLON':([79,],[113,]),'IMAGNUMBER':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ATHAWA':([1,2,3,5,7,8,11,12,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,44,48,51,60,72,76,78,79,80,81,83,87,88,89,90,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,113,115,116,117,123,127,134,135,137,140,141,147,153,156,157,159,162,],[-11,-62,-61,-59,-68,-12,-27,-63,-9,-10,-67,-72,-4,-30,-28,-58,-13,-5,-66,-8,-29,-3,-57,-26,-31,-60,-64,-14,-65,-6,-69,-7,-72,-74,-85,-84,-23,-83,-18,-17,-70,-71,-56,-2,-22,-19,-15,-21,-20,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,-16,-85,128,-14,-73,138,-42,-40,-32,-24,-39,-33,-41,-85,-37,138,-38,]),'CHOTI':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,48,60,76,80,81,83,97,98,99,100,101,102,103,104,105,106,107,108,109,111,123,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,74,-65,-69,-72,-74,-84,-83,-70,-71,-56,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,-73,]),'FLOAT':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'MI':([19,],[56,]),'MAKA':([1,2,3,5,7,8,11,12,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,44,48,51,60,72,76,78,79,80,81,83,87,88,89,90,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,113,116,117,123,134,135,137,140,141,142,147,148,153,157,162,],[-11,-62,-61,-59,-68,-12,-27,-63,-9,-10,-67,-72,-4,-30,-28,-58,-13,-5,-66,-8,-29,-3,-57,-26,-31,-60,-64,-14,-65,-6,-69,-7,-72,-74,-85,-84,-23,-83,-18,-17,-70,-71,-56,-2,-22,-19,-15,-21,-20,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,-16,-25,-14,-73,-42,-40,-32,-24,-39,-85,-33,153,-41,-37,-38,]),'SI':([19,],[57,]),'LEU':([0,2,3,5,7,12,18,19,20,24,27,32,35,36,37,38,39,41,44,48,51,60,76,80,81,82,83,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,117,118,123,128,136,142,145,149,156,158,],[-85,-62,-61,-59,-68,-63,-67,-72,-45,-58,-66,-57,-60,-64,-44,-65,78,-69,-72,-74,-85,-84,-83,-70,-71,-85,-56,-45,-85,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-85,-79,-43,-85,-44,-85,-73,-85,-85,-85,-85,-85,-85,-85,]),'DI':([19,],[52,]),'PATHAU':([2,3,5,7,12,18,19,24,27,32,35,36,37,38,41,44,48,60,76,80,81,83,97,98,99,100,101,102,103,104,105,106,107,108,109,111,117,123,],[-62,-61,-59,-68,-63,-67,-72,-58,-66,-57,-60,-64,72,-65,-69,-72,-74,-84,-83,-70,-71,-56,-82,-51,-78,-55,-54,-80,-76,-50,-81,-75,-53,-52,-77,-79,72,-73,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'slif':([0,51,82,96,110,115,118,128,136,142,145,149,156,158,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'optelse':([127,159,],[139,161,]),'reference':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'float':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'incremental':([0,51,82,96,110,115,118,128,136,142,145,149,156,158,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'imaginary':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'string':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'forloop':([0,51,96,110,115,118,142,145,149,156,158,],[11,11,11,11,11,11,11,11,11,11,11,]),'variableArgs':([85,131,],[119,143,]),'program':([0,96,110,115,118,142,145,149,156,158,],[15,124,125,127,129,148,151,154,159,160,]),'print':([0,51,82,96,110,115,118,128,136,142,145,149,156,158,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'input':([0,51,82,96,110,115,118,128,136,142,145,149,156,158,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'empty':([0,51,55,82,85,96,110,115,118,128,131,136,142,145,149,156,158,],[20,20,91,91,121,20,20,20,20,91,121,91,20,20,20,20,20,]),'function':([0,51,96,110,115,118,142,145,149,156,158,],[21,21,21,21,21,21,21,21,21,21,21,]),'whileloop':([0,51,96,110,115,118,142,145,149,156,158,],[22,22,22,22,22,22,22,22,22,22,22,]),'begin':([0,],[23,]),'return':([0,51,82,96,110,115,118,128,136,142,145,149,156,158,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'slstmt':([0,51,82,96,110,115,118,128,136,142,145,149,156,158,],[26,26,116,26,26,26,26,140,116,26,26,26,26,26,]),'assignment':([0,51,82,96,110,115,118,128,136,142,145,149,156,158,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'repeatloop':([0,51,96,110,115,118,142,145,149,156,158,],[29,29,29,29,29,29,29,29,29,29,29,]),'stmt':([0,51,96,110,115,118,142,145,149,156,158,],[30,87,30,30,30,30,30,30,30,30,30,]),'integer':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'mlif':([0,51,96,110,115,118,142,145,149,156,158,],[33,33,33,33,33,33,33,33,33,33,33,]),'class':([0,51,96,110,115,118,142,145,149,156,158,],[34,34,34,34,34,34,34,34,34,34,34,]),'expr':([0,4,6,10,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[37,45,46,48,84,37,88,89,90,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,117,122,37,37,126,37,37,117,144,117,146,37,37,37,155,37,37,]),'variableExpr':([0,51,55,82,96,110,115,118,128,136,142,145,149,156,158,],[39,39,93,39,39,39,39,39,39,39,39,39,39,39,39,]),'mlstmt':([0,51,96,110,115,118,142,145,149,156,158,],[40,40,40,40,40,40,40,40,40,40,40,]),'functioncall':([0,4,6,10,43,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[41,41,41,41,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'identifier':([0,4,6,10,43,47,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,75,77,82,86,96,110,114,115,118,128,133,136,138,142,145,149,150,156,158,],[7,7,7,7,80,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expression':([0,51,82,96,110,115,118,128,136,142,145,149,156,158,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> begin","S'",1,None,None,None),
  ('begin -> program','begin',1,'p_begin','E:\\Major\\mrhee\\python\\Parser.py',20),
  ('program -> program NEWLINE stmt','program',3,'p_program_recursive','E:\\Major\\mrhee\\python\\Parser.py',24),
  ('program -> stmt','program',1,'p_program_stmt','E:\\Major\\mrhee\\python\\Parser.py',27),
  ('stmt -> empty','stmt',1,'p_stmt','E:\\Major\\mrhee\\python\\Parser.py',36),
  ('stmt -> slstmt','stmt',1,'p_stmt','E:\\Major\\mrhee\\python\\Parser.py',37),
  ('stmt -> mlstmt','stmt',1,'p_stmt','E:\\Major\\mrhee\\python\\Parser.py',38),
  ('slstmt -> expression','slstmt',1,'p_slstmt','E:\\Major\\mrhee\\python\\Parser.py',46),
  ('slstmt -> assignment','slstmt',1,'p_slstmt','E:\\Major\\mrhee\\python\\Parser.py',47),
  ('slstmt -> print','slstmt',1,'p_slstmt','E:\\Major\\mrhee\\python\\Parser.py',48),
  ('slstmt -> input','slstmt',1,'p_slstmt','E:\\Major\\mrhee\\python\\Parser.py',49),
  ('slstmt -> slif','slstmt',1,'p_slstmt','E:\\Major\\mrhee\\python\\Parser.py',50),
  ('slstmt -> incremental','slstmt',1,'p_slstmt','E:\\Major\\mrhee\\python\\Parser.py',51),
  ('slstmt -> return','slstmt',1,'p_slstmt','E:\\Major\\mrhee\\python\\Parser.py',52),
  ('expression -> expr','expression',1,'p_expression','E:\\Major\\mrhee\\python\\Parser.py',58),
  ('assignment -> IDENTIFIER ASSIGNMENT expr','assignment',3,'p_assignment','E:\\Major\\mrhee\\python\\Parser.py',61),
  ('print -> variableExpr LEKHA SEMICOLON','print',3,'p_print','E:\\Major\\mrhee\\python\\Parser.py',64),
  ('print -> variableExpr LEKHA','print',2,'p_print_ln','E:\\Major\\mrhee\\python\\Parser.py',67),
  ('input -> variableExpr LEU','input',2,'p_input','E:\\Major\\mrhee\\python\\Parser.py',70),
  ('incremental -> IDENTIFIER AI expr','incremental',3,'p_incremental','E:\\Major\\mrhee\\python\\Parser.py',73),
  ('incremental -> IDENTIFIER SI expr','incremental',3,'p_incremental','E:\\Major\\mrhee\\python\\Parser.py',74),
  ('incremental -> IDENTIFIER MI expr','incremental',3,'p_incremental','E:\\Major\\mrhee\\python\\Parser.py',75),
  ('incremental -> IDENTIFIER DI expr','incremental',3,'p_incremental','E:\\Major\\mrhee\\python\\Parser.py',76),
  ('return -> expr PATHAU','return',2,'p_return','E:\\Major\\mrhee\\python\\Parser.py',80),
  ('slif -> YEDI expr BHAE slstmt ATHAWA slstmt','slif',6,'p_slif','E:\\Major\\mrhee\\python\\Parser.py',85),
  ('slif -> YEDI expr BHAE slstmt','slif',4,'p_slif_noelse','E:\\Major\\mrhee\\python\\Parser.py',88),
  ('mlstmt -> mlif','mlstmt',1,'p_mlstmt','E:\\Major\\mrhee\\python\\Parser.py',93),
  ('mlstmt -> forloop','mlstmt',1,'p_mlstmt','E:\\Major\\mrhee\\python\\Parser.py',94),
  ('mlstmt -> whileloop','mlstmt',1,'p_mlstmt','E:\\Major\\mrhee\\python\\Parser.py',95),
  ('mlstmt -> repeatloop','mlstmt',1,'p_mlstmt','E:\\Major\\mrhee\\python\\Parser.py',96),
  ('mlstmt -> function','mlstmt',1,'p_mlstmt','E:\\Major\\mrhee\\python\\Parser.py',97),
  ('mlstmt -> class','mlstmt',1,'p_mlstmt','E:\\Major\\mrhee\\python\\Parser.py',98),
  ('mlif -> YEDI expr BHAE NEWLINE program DIYE','mlif',6,'p_mlif','E:\\Major\\mrhee\\python\\Parser.py',104),
  ('mlif -> YEDI expr BHAE NEWLINE program optelse DIYE','mlif',7,'p_mlif_opt','E:\\Major\\mrhee\\python\\Parser.py',107),
  ('optelse -> ATHAWA expr BHAE NEWLINE program optelse','optelse',6,'p_optelse','E:\\Major\\mrhee\\python\\Parser.py',112),
  ('optelse -> ATHAWA expr BHAE NEWLINE program','optelse',5,'p_optelse_oelf','E:\\Major\\mrhee\\python\\Parser.py',115),
  ('optelse -> ATHAWA NEWLINE program','optelse',3,'p_optelse_else','E:\\Major\\mrhee\\python\\Parser.py',118),
  ('forloop -> SABAI IDENTIFIER ASSIGNMENT expr DEKHI expr NEWLINE program BAISA','forloop',9,'p_forloop_default','E:\\Major\\mrhee\\python\\Parser.py',123),
  ('forloop -> SABAI IDENTIFIER ASSIGNMENT expr DEKHI expr COLON expr NEWLINE program BAISA','forloop',11,'p_forloop_increment','E:\\Major\\mrhee\\python\\Parser.py',126),
  ('whileloop -> JABA SAMMA expr NEWLINE program BAJA','whileloop',6,'p_whileloop','E:\\Major\\mrhee\\python\\Parser.py',131),
  ('repeatloop -> expr CHOTI NEWLINE program TICHO','repeatloop',5,'p_repeatloop','E:\\Major\\mrhee\\python\\Parser.py',136),
  ('function -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE program MAKA','function',8,'p_function','E:\\Major\\mrhee\\python\\Parser.py',140),
  ('class -> KHAKA IDENTIFIER NEWLINE program KAKHA','class',5,'p_class','E:\\Major\\mrhee\\python\\Parser.py',144),
  ('variableExpr -> variableExpr COMMA expr','variableExpr',3,'p_variableExpr_multi','E:\\Major\\mrhee\\python\\Parser.py',149),
  ('variableExpr -> expr','variableExpr',1,'p_variableExpr_single','E:\\Major\\mrhee\\python\\Parser.py',152),
  ('variableExpr -> empty','variableExpr',1,'p_variableExpr_empty','E:\\Major\\mrhee\\python\\Parser.py',155),
  ('variableArgs -> IDENTIFIER COMMA variableArgs','variableArgs',3,'p_variableArgs_multi','E:\\Major\\mrhee\\python\\Parser.py',159),
  ('variableArgs -> IDENTIFIER','variableArgs',1,'p_variableArgs_single','E:\\Major\\mrhee\\python\\Parser.py',162),
  ('variableArgs -> IDENTIFIER BOGUS','variableArgs',2,'p_variableArgs_bogus','E:\\Major\\mrhee\\python\\Parser.py',165),
  ('variableArgs -> empty','variableArgs',1,'p_variableArgs_empty','E:\\Major\\mrhee\\python\\Parser.py',168),
  ('expr -> expr PLUS expr','expr',3,'p_expr','E:\\Major\\mrhee\\python\\Parser.py',173),
  ('expr -> expr MINUS expr','expr',3,'p_expr','E:\\Major\\mrhee\\python\\Parser.py',174),
  ('expr -> expr TIMES expr','expr',3,'p_expr','E:\\Major\\mrhee\\python\\Parser.py',175),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr','E:\\Major\\mrhee\\python\\Parser.py',176),
  ('expr -> expr MODULUS expr','expr',3,'p_expr','E:\\Major\\mrhee\\python\\Parser.py',177),
  ('expr -> expr POWER expr','expr',3,'p_expr','E:\\Major\\mrhee\\python\\Parser.py',178),
  ('expr -> LPARA expr RPARA','expr',3,'p_expr_brkt','E:\\Major\\mrhee\\python\\Parser.py',183),
  ('expr -> integer','expr',1,'p_expr_atom','E:\\Major\\mrhee\\python\\Parser.py',187),
  ('expr -> float','expr',1,'p_expr_atom','E:\\Major\\mrhee\\python\\Parser.py',188),
  ('expr -> imaginary','expr',1,'p_expr_atom','E:\\Major\\mrhee\\python\\Parser.py',189),
  ('expr -> string','expr',1,'p_expr_atom','E:\\Major\\mrhee\\python\\Parser.py',190),
  ('expr -> reference','expr',1,'p_expr_atom','E:\\Major\\mrhee\\python\\Parser.py',191),
  ('integer -> DECIMALINTEGER','integer',1,'p_integer','E:\\Major\\mrhee\\python\\Parser.py',196),
  ('integer -> OCTALINTEGER','integer',1,'p_integer_octal','E:\\Major\\mrhee\\python\\Parser.py',199),
  ('integer -> HEXAINTEGER','integer',1,'p_integer_hexa','E:\\Major\\mrhee\\python\\Parser.py',202),
  ('float -> FLOAT','float',1,'p_float','E:\\Major\\mrhee\\python\\Parser.py',205),
  ('imaginary -> IMAGNUMBER','imaginary',1,'p_imaginary','E:\\Major\\mrhee\\python\\Parser.py',208),
  ('string -> STRING','string',1,'p_string','E:\\Major\\mrhee\\python\\Parser.py',211),
  ('reference -> identifier','reference',1,'p_reference','E:\\Major\\mrhee\\python\\Parser.py',215),
  ('reference -> functioncall','reference',1,'p_reference','E:\\Major\\mrhee\\python\\Parser.py',216),
  ('reference -> reference DOT identifier','reference',3,'p_reference_nested','E:\\Major\\mrhee\\python\\Parser.py',220),
  ('reference -> reference DOT functioncall','reference',3,'p_reference_nested','E:\\Major\\mrhee\\python\\Parser.py',221),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','E:\\Major\\mrhee\\python\\Parser.py',226),
  ('functioncall -> IDENTIFIER LPARA variableExpr RPARA','functioncall',4,'p_functioncall','E:\\Major\\mrhee\\python\\Parser.py',229),
  ('expr -> MINUS expr','expr',2,'p_uminus','E:\\Major\\mrhee\\python\\Parser.py',234),
  ('expr -> expr GT expr','expr',3,'p_exp_condition','E:\\Major\\mrhee\\python\\Parser.py',241),
  ('expr -> expr LT expr','expr',3,'p_exp_condition','E:\\Major\\mrhee\\python\\Parser.py',242),
  ('expr -> expr GE expr','expr',3,'p_exp_condition','E:\\Major\\mrhee\\python\\Parser.py',243),
  ('expr -> expr LE expr','expr',3,'p_exp_condition','E:\\Major\\mrhee\\python\\Parser.py',244),
  ('expr -> expr EQ expr','expr',3,'p_exp_condition','E:\\Major\\mrhee\\python\\Parser.py',245),
  ('expr -> expr NE expr','expr',3,'p_exp_condition','E:\\Major\\mrhee\\python\\Parser.py',246),
  ('expr -> expr RA expr','expr',3,'p_exp_condition','E:\\Major\\mrhee\\python\\Parser.py',247),
  ('expr -> expr WA expr','expr',3,'p_exp_condition','E:\\Major\\mrhee\\python\\Parser.py',248),
  ('expr -> expr CHHA','expr',2,'p_exp_negation','E:\\Major\\mrhee\\python\\Parser.py',252),
  ('expr -> expr CHHAINA','expr',2,'p_exp_negation','E:\\Major\\mrhee\\python\\Parser.py',253),
  ('empty -> <empty>','empty',0,'p_empty','E:\\Major\\mrhee\\python\\Parser.py',258),
]
