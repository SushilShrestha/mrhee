#encoding=utf8
lextest = {
	'identifier1':u'_॥ॣ३_५६',
	'decimalInteger1':u'८९४',
	'decimalInteger2':u'०',
	'octalInteger1':u'००२७९',
	'hexaInteger1':u'०x०९४८५AF',
	'float1':u'९.४३',
	'float2':u'.४३',
	'float3':u'०.४३',
	'float4':u'९.४३e४',
	'float5':u'९.४३E४',
	'float6':u'.४३E४',
	'float7':u'२.E४',
	'float8':u'२.E-४',

	'imaginary':u'०i',
	'imaginary2':u'i',
	'imaginary3':u'.४३i',
	'imaginary4':u'०.३२e५७i',

# 	'comment':u'''टेस्ट टेस्ट // टेस्टटेस्ट
# तेस्ते /* फ्त्क्ज
# फ्क्ज्दा 
# */
# ''',

	# 'string':u'"test"',
	# 'string1':u"'test'",
	# 'string2':u'''"two line 
	# string"''',

}

gTest = {
	'normal' : u'''(९*९)^९%९''',
	'ident_condition'	: u'''((क*९)^-९%९==९%९)छ वा (९%९==९%९) छैन र ९%९==९%९ वा क == ख''',
	'string_condition'	: u''' "हाम्रो" == "तिम्रो" छैन''',
	'multiline'			: u'''
								क == "तिम्रो" छैन

								''',
	'input' 			: u'''
							क, ख, घ लेउ
							''',
	'assignment'		: u'''
						क = ४ * ख + ९ * (४ % ३) / (८i)
						''',
	'singleline if'		: u'''यदि प*ख == क छ भए क लेख''',
	'increment operator': u'''यदि प*ख == क छ भए क += ६''',
	'slif'				: u'''यदि ग == ख भए ख लेख अथवा ख लेख''',
	'mlif'				: u'''यदि क==ख भए
		'क' लेख
		क लेउ
		अथवा क==ख भए
		ब लेख
		अथवा क==ख भए
		ब लेख
		अथवा
		ल लेख
	दिय''',
	'forloop'			: u'''सबै क = १ देखि ८ : -१
		क लेख
		बैस
		''',
	'whileloop'			: u'''जब सम्म क == ख छ
		क लेख
		क += ४
		बज''',
	'repeatloop'		: u'''७*८ चोटि
		क लेख
		टिचो''',
	'functiondef'		: u'''काम टेस्ट(क, ख, ग)
					७*८ चोटि
						क लेख
					टिचो
					मका''',
	'classdef'			: u'''खाका वस्तु
		काम टेस्ट(क, ख, ग)
		७*८ चोटि
			क लेख
		टिचो
		मका
		काखा''',
	'functioncall'		: u'''टेस्ट('क', 'ख', 'ग')'''

}

interpretlist = [u'''
	-(९.०३e०३^३)*९/४ लेख
	०३४ लेख
	०x३४A * ०३ लेख
	
	// this is comment

	ख लेख
	''',# arithop and print test
	u'''
	(९>३),(९<.३),(९>=३),(९<=९),(९==३),(९!=३),(९==३)र(९!=३), (९==३)वा(९!=३) लेख
	''',# print and binop test
	u'''
	(९>३) छैन,(९<.३) छ,(९>=३) छैन,(९<=९) छैन,(९==३) छ,(९!=३) छैन,((९==३)र(९!=३)) छ, ((९==३)वा(९!=३)) छैन लेख
	''',# negation test
	u'''
	क = ४ * ४ + ९ * (४ % ३)
	क लेख
	'9', ख, '9' लेउ
	''', # input
	u'''
	क = ४
	क += ४
	क लेख
	''', # increment
	u'''
	क = ९
	यदि ९*० == ० छ भए क लेख
	यदि ९*० != ० छ भए क लेख
	यदि ९*० == ० छैन भए क लेख अथवा क*९ लेख
	''',# slif
	u'''
	क = ९
	ख = ९९
	यदि क==ख भए
		क लेख
	अथवा क>=ख भए
		'09' लेख
	अथवा क>ख भए
		'88' लेख
	अथवा
		'78' लेख
	दिय
	''', # mlif
	 u'''
	क = ९
	ख = ९९
	सबै क = ८ देखि १  : -१
		क लेख
	बैस
	''',# forloop
	u'''
	क = ४
	ख = ९
	जब सम्म क <= ख छ
		क लेख
		क += १
	बज
	''', # whileloop
	u'''
	क = ४
	ख = ९
	ख*१ चोटि
		क+ख लेख
	टिचो
	''', # repeatloop
	u'''
	क = ४
	ख = ९
	काम टेस्ट(ख, ग)
		काम टेस्ट(ख, ग)
			७ चोटि
				क, ख, ग लेख
			टिचो
			७ * ७ पठाउ
		मका
		टेस्ट(९९९९९९, ९९९९) लेख
		७ पठाउ
	मका
	टेस्ट(९९, ९९९) लेख
	''', # function
	u'''
	क = ४
	खाका वस्तु
		क = ४
		ख = ९
		काम रचना()
			क = ५
			ग = ७
			क लेख
		मका
		काम टेस्ट(क, ख, ग)
		७*८ चोटि
			क लेख
		टिचो
		मका
	काखा
	त = वस्तु()
	''',
	u'''
	क = ४
	खाका वस्तु
		क = ४
		ख = ९
		काम रचना()
			क = ५
			ग = ७
			ग लेख
		मका
		काम टेस्ट(क, ख, ग)
			७*८ चोटि
				क, ख, ग लेख
			टिचो
		मका
	काखा
	त = वस्तु()
	त.टेस्ट(क, ख, ग) लेख
	ख लेख
	तटे.टे लेख
	''',
	u'''
	क = ४
	खाका वस्तु
		क = ४
		ख = ९
		काम रचना()
			क = ५
			ग = ७
		मका
		काम टेस्ट(क, ख, ग)
		७*८ चोटि
			क लेख
		टिचो
		मका
		काम फ़क्तोरिअल् (ल)
			यदि ल==१ भए १ पठाउ अथवा ल * फ़क्तोरिअल्(ल-१) पठाउ
		मका
	काखा
	त = वस्तु()
	त.फ़क्तोरिअल्(५) लेख
	वस्तु लेख
	त लेख
	त.फ़क्तोरिअल् लेख
	''', # object + recursion + function reference
	'''
	त = शुन्य
	त लेख''', # sunya

	u'''
	त = शुन्य
	यदि साचो भए त लेख
	यदि झुटो छैन भए त लेख
	''', # booleans
	'''क = [२*३,'टेस्ट',[२,३,५]]
		क[०] लेख
		क[५][२] लेख
		ख = क[२][०] + क[०]
		//क[१] = ४
	''', # arrays
	u'''
	क = ७
सबै ख = १ देखि १०
यदि ख == क - ३ भए
अर्को
अथवा ख == क+२ भए
बाहिर
दिय
ख लेख
बैस
	''', # break continue
u'''
खाका वस्तु
		क = ४
		ख = ९
		काम रचना()
			क = ५
			ग = ७
			ग लेख
		मका
		काम टेस्ट(क, ख, ग)
			७*८ चोटि
				क, ख, ग लेख
			टिचो
		मका
	काखा
	त = वस्तु()
	त.टेस्ट(क, ख, ग) लेख
	ख लेख
	तटे.टे लेख
	''',
	u'''
	क = ४
	खाका वस्तु
		क = ४
		ख = ९
		काम रचना()
			क = ५
			ग = ७
		मका
		काम फ़क्तोरिअल् (ल)
			यदि ल==१ भए १ पठाउ अथवा ल * फ़क्तोरिअल्(ल-१) पठाउ
		मका
	काखा
	त = वस्तु()
	त.फ़क्तोरिअल्(५) लेख
	वस्तु लेख
	त लेख
	त.फ़क्तोरिअल् लेख
''', # class, object, function print 
u'''
क = ९
खाका खिचडी
काम रचना()
मका
काम भान्ता()
मका
काखा
ओक = खिचडी()

यदि शुन्य भए
	क लेख
अथवा [] भए
	'09' लेख
अथवा '' भए
	'88' लेख
अथवा
	'zeroth' लेख
दिय

यदि शुन्य छैन भए 'first' लेख
यदि "" भए '' लेख
यदि [] छैन भए 'second' लेख अथवा 'not' लेख
यदि "hyaa" भए 'third' लेख
यदि  क भए 'forth' लेख
यदि झुटो भए 'आलु' लेख
यदि साचो भए 'fifth' लेख
यदि साचो भए 'fifth' लेख
यदि ओक भए 'sixth' लेख
यदि ओक.भान्ता भए 'seventh' लेख
''', 		# booleans check
u'''
सबै क = "८" देखि १  : -१
	क लेख
बैस
''',		# for loop exprs bring error
u'''
क = ४
ख = ९
जब सम्म शुन्य छ वा झुटो छ
	क लेख
	क += १
बज
''',		#while loop with bools
u'''क = ४
ख = ९
'ख*१' चोटि
	क+ख लेख
टिचो''', 	# choti error check
u'''काम टेस्ट(४,५)
४ लेख
मका''', #funct params
u'''
क = [३,४,५]
क['भातमारा'] लेख
क[९] लेख''',			#array index out of bound
u'''
क = [३,४,५]
क[२] + ७ लेख
//क[२] + "अक्षर" लेख
"unicode" + क[२] लेख
'uni' + 'code' लेख
//'uni' - 'code' लेख
[४५,५३,३२,'this'] + [३,४,५,'this'] लेख
[४५,५३,३२,'this'] * [३,४,५,'this'] लेख
''',				# arithop

u'''खाका त
	अ = शुन्य
	काम रचना()
	मका
	काम टेस्ट()
		क = [३,४,५]
		क पठाउ
	मका
काखा

प = [३, ४]
प[१] = त()

प[१].टेस्ट() लेख ''', # aryreference chaining

u'''
क = ४
	खाका वस्तु
		//क = [४,५,[७,७७]]
		काम रचना()
		क = [४,५,[७,७७]]
			ग = ७
		मका
		काम टेस्ट(क, ख, ग)
		७*८ चोटि
			क लेख
		टिचो
		मका
		काम फ़क्तोरिअल् (ल)
			यदि ल==१ भए १ पठाउ अथवा ल * फ़क्तोरिअल्(ल-१) पठाउ
		मका
	काखा
	त = वस्तु()
	त.फ़क्तोरिअल्(५) लेख
	त.क[१] = ७० 
	त.क लेख
	त.क[१] लेख
''',			# ary ref object
u'''
खाका वस्तु
	काम रचना ()
		क = [३,५]
	मका
काखा
क = [९]
ख = ९९
प् = वस्तु()
सबै प्.क[०] = ८ देखि १  : -१
	प्.क[०] लेख
बैस''', 		# for loop ref done

u'''
क = [३,४,५,६२]
क[१] += ५
क[१] लेख
''',				# ary increment
u'''
खाका वस्तु
	क = [३,५]
	काम रचना ()	
		य = त()
		य.आलु()
	मका
	खाका त
		काम रचना()
		मका
		काम आलु()
			"aalu" लेख
		मका
	काखा
काखा
क = [९]
ख = ९९
प् = वस्तु()
''', 		#innerclass experiment
u'''
१२>९ लेख
(१२>"९") लेख
"टेस्ट">'केट' लेख
''',		# binop with type check

]

jsTestset = ["""०x३४A, ०३, 'test' लेख;
०x३४A, ०३, 'test' लेख""",
'''(९.०३e०३^३)*९/४ लेख''', #infinity
'''(९.०३e०३)*९/४ लेख''',
'''क = ४ * ४
क लेख
क += ४
क लेख
क *= ४
क लेख
क -= ४
क लेख
क /= क
क लेख''',
'''काम फ़क्तोरिअल्(क)
यदि (क == १) भए
१ पठाउ
दिय
क *फ़क्तोरिअल्(क-१) पठाउ
मका

फ़क्तोरिअल्(४) लेख''', # recursion factorial


]

error = [
		u'''ल, "छ", ल, त लेख''',
		u'''
						क += ७*त
						''',
		u'०९ लेख',

		]

testedErrors = {
	'yadi without bhae' : u'''
यदि क == ख छ भए 
क लेख
अथवा क == ख छैन भ
ख लेख
	'''
}